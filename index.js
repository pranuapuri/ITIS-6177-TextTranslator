const express = require('express');
const app = express();
const port= 3002;
const cors = require('cors');
const axios = require('axios').default;
const swaggerJsdoc = require('swagger-jsdoc');
const swaggerUi = require('swagger-ui-express');
const bodyParser = require('body-parser');
const { v4: uuidv4 } = require('uuid');




const doc = {
    swaggerDefinition: {
        info: {
        version: "1.0.0",
        title: "Text Translator",
        description: "Microsoft Azure Text-Translator API autogenerated by Swagger documentation."
        },
    host: "137.184.102.57:3002",
    basePath: '/',
    },
    apis: ['./index.js']
};


app.use(cors());
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: true }));

const specs = swaggerJsdoc(doc);
app.use('/docs',swaggerUi.serve, swaggerUi.setup(specs));


const Key = "Subscription Key";
const location = "eastus";
const endpoint = "https://api.cognitive.microsofttranslator.com/";

app.get('/',(req,res)=>{
    res.send("Microsoft Azure Text-Translator");
})

/**
 * @swagger
 * /languages:
 *    get:
 *      description: Return the list of all langauges
 *      produces: 
 *          - application/json
 *      responses:
 *          '200':
 *              description: Success
 *          '400':
 *              description: Bad Request. Might be invalid input
 *          '500':
 *              description: Internal Server Error
 */

app.get('/languages', (req, res) => {
    axios({
        baseURL: endpoint,
        url: "/languages",
        method: "get",
        headers: {
            'Ocp-Apim-Subscription-Key': Key,
            'Ocp-Apim-Subscription-Region': location,
            'Content-type': 'application/json',
            'X-ClientTraceId': uuidv4().toString()
        },
        params: {
            "api-version": "3.0",
        },
        responseType: 'json'
    }).then(function(response){
        console.log(JSON.stringify(response.data, null, 4));
        res.status(200).send(JSON.stringify(response.data, null, 4));
    }).catch((error)=>{
        if(error.message){
            res.status(400).send("Bad Request. Might be invalid input");
        }else{
            res.status(500).send("Internal Sever Error");
        }
    })
})


/**
 * @swagger
 * /translate:  
 *  post:
 *      description: Translate the text from the specified source language into the desired target language.
 *      parameters:
 *          - name: reqBody
 *            description: request body
 *            in: body
 *            schema:
 *              type: object
 *              properties:
 *                  from:
 *                    type: string
 *                  to:
 *                    type: array
 *                    items:
 *                      type: string
 *                    uniqueItems: true                 
 *                  text:   
 *                    type: string
 *              required:
 *                  - from
 *                  - to
 *                  - text
 *              example:
 *                 from: en
 *                 to: es
 *                 text: Hello World!
 *      responses:
 *          '200':
 *              description: Success
 *          '400':
 *              description: Bad Request. Might be invalid input
 *          '500':
 *              description: Internal Sever Error
 */


app.post('/translate',(req,res)=>{
    axios({
        baseURL: endpoint,
        url: '/translate',
        method: 'post',
        headers: {
            'Ocp-Apim-Subscription-Key': Key,
            'Ocp-Apim-Subscription-Region': location,
            'Content-type': 'application/json',
            'X-ClientTraceId': uuidv4().toString()
        },
        params: {
            'api-version': '3.0',
            'from': req.body.from,
            'to': req.body.to
        },
        data: [{
            'text': req.body.text
        }],
        responseType: 'json'
    }).then(function(response){
        console.log(JSON.stringify(response.data, null, 4));
        res.status(200).send(JSON.stringify(response.data, null, 4));
    }).catch((error)=>{
        if(error.message){
            res.status(400).send("Bad Request. Might be invalid input");
        }else{
            res.status(500).send("Sever Error");
        }
    })
})


/**
 * @swagger
 * /transliterate:  
 *  post:
 *      description: Map source language script or alphabet to a target language script or alphabet.
 *      parameters:
 *          - name: reqBody
 *            description: request body
 *            in: body
 *            schema:
 *              type: object
 *              properties:
 *                  to:
 *                    type: array
 *                    items:
 *                      type: string
 *                    uniqueItems: true  
 *                  toScript:
 *                    type: string               
 *                  text:   
 *                    type: string
 *              required:
 *                  - to
 *                  - toScript
 *                  - text
 *              example:
 *                 language: te
 *                 fromScript: Telu
 *                 toScript: Latn
 *                 text: ఎలా ఉన్నారు?
 *      responses:
 *          '200':
 *              description: success
 *          '400':
 *              description: Bad Request. Might be invalid input
 *          '500':
 *              description: Internal Sever Error
 */



 app.post('/transliterate',(req,res)=>{
    axios({
        baseURL: endpoint,
        url: '/transliterate',
        method: 'post',
        headers: {
            'Ocp-Apim-Subscription-Key': Key,
            'Ocp-Apim-Subscription-Region': location,
            'Content-type': 'application/json',
            'X-ClientTraceId': uuidv4().toString()
        },
        params: {
            'api-version': '3.0',
            'language': req.body.language,
            'fromScript': req.body.fromScript,
            'toScript': req.body.toScript
        },
        data: [{
            'text': req.body.text
        }],
        responseType: 'json'
    }).then(function(response){
        console.log(JSON.stringify(response.data, null, 4));
        res.status(200).send(JSON.stringify(response.data, null, 4))
    }).catch((error)=>{
        if(error.message){
            res.status(400).send("Bad Request. Might be invalid input");
        }else{
            res.status(500).send("Internal Sever Error");
        }
    })
})



/**
 * @swagger
 * /detect:
 *  post:
 *      description: Language identification without translation
 *      parameters:
 *          - name: reqBody
 *            description: request body
 *            in: body
 *            schema:
 *              type: object
 *              properties:               
 *                  text:   
 *                    type: string
 *              required:
 *                  - text
 *              example:
 *                 text: Welcome to Text-Translator API.
 *      responses:
 *          '200':
 *              description: success
 *          '400':
 *              description: Bad Request. Might be invalid input
 *          '500':
 *              description: Internal Sever Error
 */




app.post('/detect',(req,res)=>{
    axios({
        baseURL: endpoint,
        url: '/detect',
        method: 'post',
        headers: {
            'Ocp-Apim-Subscription-Key': Key,
            'Ocp-Apim-Subscription-Region': location,
            'Content-type': 'application/json',
            'X-ClientTraceId': uuidv4().toString()
        },
        params: {
            'api-version': '3.0'
        },
        data: [{
            'text': req.body.text
        }],
        responseType: 'json'
    }).then(function(response){
        console.log(JSON.stringify(response.data, null, 4));
        res.status(200).send(JSON.stringify(response.data, null, 4))      
    }).catch((error)=>{
        if(error.message){
            res.status(400).send("Bad Request. Might be invalid input");
        }else{
            res.status(500).send("Internal Sever Error");
        }
    })
})


/**
 * @swagger
 * /breaksentence:
 *  post:
 *      description: Sentence length without translation
 *      parameters:
 *          - name: reqBody
 *            description: request body
 *            in: body
 *            schema:
 *              type: object
 *              properties:                
 *                  text:   
 *                    type: string
 *              required:
 *                  - text
 *              example:
 *                  text: Hi, How are you? very nice to meet you.
 *      responses:
 *          '200':
 *              description: success
 *          '400':
 *              description: Bad Request. Might be invalid input
 *          '500':
 *              description: Internal Sever Error
 */


 app.post('/breaksentence',(req,res)=>{
    axios({
        baseURL: endpoint,
        url: '/breaksentence',
        method: 'post',
        headers: {
            'Ocp-Apim-Subscription-Key': Key,
            'Ocp-Apim-Subscription-Region': location,
            'Content-type': 'application/json',
            'X-ClientTraceId': uuidv4().toString()
        },
        params: {
            'api-version': '3.0',           
        },
        data: [{
            'text': req.body.text
        }],
        responseType: 'json'
    }).then(function(response){
        console.log(JSON.stringify(response.data, null, 4));
        res.status(200).send(JSON.stringify(response.data, null, 4))
    }).catch((error)=>{
        if(error.message){
            res.status(400).send("Bad Request. Might be invalid input");
        }else{
            res.status(500).send("Internal Sever Error");
        }
    })
})



/**
 * @swagger
 * /dictionarylookup:  
 *  post:
 *      description: Dictionary lookup (alternate translations)
 *      parameters:
 *          - name: reqBody
 *            description: request body
 *            in: body
 *            schema:
 *              type: object
 *              properties:
 *                  from:
 *                    type: string
 *                  to:
 *                    type: array
 *                    items:
 *                      type: string
 *                    uniqueItems: true                 
 *                  text:   
 *                    type: string
 *              required:
 *                  - from
 *                  - to
 *                  - text
 *              example:
 *                 from: en
 *                 to: es
 *                 text: How is your health?
 *      responses:
 *          '200':
 *              description: success
 *          '400':
 *              description: Bad Request. Might be invalid input
 *          '500':
 *              description: Internal Sever Error
 */



 app.post('/dictionarylookup',(req,res)=>{
    axios({
        baseURL: endpoint,
        url: '/dictionary/lookup',
        method: 'post',
        headers: {
            'Ocp-Apim-Subscription-Key': Key,
            'Ocp-Apim-Subscription-Region': location,
            'Content-type': 'application/json',
            'X-ClientTraceId': uuidv4().toString()
        },
        params: {
            'api-version': '3.0',     
            'from': req.body.from, 
            'to': req.body.to 
        },
        data: [{
            'text': req.body.text
        }],
        responseType: 'json'
    }).then(function(response){
        console.log(JSON.stringify(response.data, null, 4));
        res.status(200).send(JSON.stringify(response.data, null, 4))
    }).catch((error)=>{
        if(error.message){
            res.status(400).send("Bad Request. Might be invalid input");
        }else{
            res.status(500).send("Internal Sever Error");
        }
    })
})


/**
 * @swagger
 * /sentencelength:
 *  post:
 *      description: Translates the given text to target language and gets the length of the sentence
 *      parameters:
 *          - name: reqBody
 *            description: request body
 *            in: body
 *            schema:
 *              type: object
 *              properties:   
 *                  to:
 *                    type: array
 *                    items:
 *                      type: string
 *                    uniqueItems: true             
 *                  text:   
 *                    type: string
 *              required:
 *                  -to
 *                  - text
 *              example:
 *                  to: es
 *                  text: I am going to school.
 *      responses:
 *          '200':
 *              description: success
 *          '400':
 *              description: Bad Request. Might be invalid input
 *          '500':
 *              description: Internal Sever Error
 */





app.post('/sentencelength',(req,res)=>{
    axios({
        baseURL: endpoint,
        url: '/translate',
        method: 'post',
        headers: {
            'Ocp-Apim-Subscription-Key': Key,
            'Ocp-Apim-Subscription-Region': location,
            'Content-type': 'application/json',
            'X-ClientTraceId': uuidv4().toString()
        },
        params: {
            'api-version': '3.0',
            'to': req.body.to,
            'includeSentenceLength': true
        },
        data: [{
            'text': req.body.text
        }],
        responseType: 'json'
    }).then(function(response){
        console.log(JSON.stringify(response.data, null, 4));
        res.status(200).send(JSON.stringify(response.data, null, 4))
    }).catch((error)=>{
        if(error.message){
            res.status(400).send("Bad Request. Might be invalid input");
        }else{
            res.status(500).send("Internal Sever Error");
        }
    })
})


app.listen(port, () => {
    console.log(`Microsoft Azure Text-Translator API listening at https://137.184.102.57:${port}`);
});


